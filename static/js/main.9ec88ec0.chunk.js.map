{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.css","components/CurrentWeather/ForecastDay/ForecastDay.module.css","components/Header/TemperatureToggle/TemperatureToggle.module.css","components/Header/Header.module.css","components/Header/Search/Search.module.css","components/ForecastWeather/ForecastItem/ForecastItem.module.css","components/ForecastWeather/ForecastWeather.module.css","components/NowInfo/NowInfo.module.css","redux/currentWeather_selector.js","api/api.js","redux/search_reducer.js","components/CurrentWeather/ForecastDay/ForecastDay.jsx","components/CurrentWeather/CurrentWeather.jsx","components/ForecastWeather/ForecastItem/ForecastItem.jsx","components/ForecastWeather/ForecastWeather.jsx","icons/Logo.svg","icons/Search_icon.svg","components/Header/Search/Search.jsx","components/Header/TemperatureToggle/TemperatureToggle.jsx","redux/app_reducer.js","components/Header/Header.jsx","components/NowInfo/NowInfo.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","getForecast4Hours","state","result","searchData","forecastWeatherData","currentTime","location","localtime","split","forecast","forecastday","hour","filter","item","time","length","i","push","searchAutocompleteAPI","city","options","method","url","params","q","headers","axios","request","forecastWeatherApi","days","realTimeWeatherApi","SET_SEARCHING_VALUE","SET_AUTOCOMPLETE_DATA","SET_FORECAST_WEATHER_DATA","SET_DATA_IS_FETCHING","SET_SEARCHING_IS_FETCHING","SET_REALTIME_WEATHER","initialState","autocompleteData","realTimeWeatherData","searchingValue","dataIsFetching","searchingIsFetching","setDataIsFetching","payload","type","setSearchingIsFetching","getForecastWeatherData","dispatch","a","response1","data","getRealTimeWeatherData","response2","searchReducer","action","ForecastDay","img","temperature","className","styles","forecastDay","weatherImg","src","alt","compose","connect","forecast4Hours","props","useEffect","currentWeather","nowWeather","name","current","temp_c","map","condition","icon","ForecastItem","forecastItem","date","daily_chance_of_rain","avghumidity","maxwind_kph","avgtemp_c","forecastWeather","day","Search","useState","setSearchingValue","setOptions","inputValue","setInputValue","newOptions","value","label","search","input","onInputChange","newValue","getAutocompleteData","onChange","e","placeholder","blurInputOnSelect","onClick","search_icon","TemperatureToggle","toggleTemperature","setCfToggle","target","innerText","toggle_block","cfToggle","selected","SET_CF_TOGGLE","appReducer","app","response","header_block","logo","nowInfo","info","title","cloud","humidity","wind_kph","vis_km","pressure_mb","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9ec88ec0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentWeather\":\"CurrentWeather_currentWeather__WsHjg\",\"city\":\"CurrentWeather_city__lwL6V\",\"time\":\"CurrentWeather_time__TxPCp\",\"temperature\":\"CurrentWeather_temperature__36nZ9\",\"forecastDay\":\"CurrentWeather_forecastDay__1aLx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastDay\":\"ForecastDay_forecastDay__yJvom\",\"weatherImg\":\"ForecastDay_weatherImg__-pfdp\",\"time\":\"ForecastDay_time__1ln5O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle_block\":\"TemperatureToggle_toggle_block__1FcGN\",\"selected\":\"TemperatureToggle_selected__Z2Awd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_block\":\"Header_header_block__8_0n1\",\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3imIs\",\"input\":\"Search_input__lsW11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastItem\":\"ForecastItem_forecastItem__3_eRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastWeather\":\"ForecastWeather_forecastWeather__nR6p2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nowInfo\":\"NowInfo_nowInfo__23spG\",\"info\":\"NowInfo_info__1iiKo\",\"value\":\"NowInfo_value__20Tpy\",\"title\":\"NowInfo_title__acqrv\"};","\nexport const getForecast4Hours = (state) => {\n    let result = []\n\n    if (state.searchData.forecastWeatherData) {\n        let currentTime = state.searchData.forecastWeatherData.location.localtime.split(' ')[1].split(':')[0]\n        result = state.searchData.forecastWeatherData.forecast.forecastday[0].hour.filter(item => {\n            if (item.time.split(' ')[1].split(':')[0] >= currentTime && item.time.split(' ')[1].split(':')[0] < +currentTime + 4) return true\n            else return false\n        })\n        if (result.length < 4) {\n            for (let i = 0; i <= 5 - result.length; i++) {\n                result.push(state.searchData.forecastWeatherData.forecast.forecastday[1].hour[i])\n            }\n        }\n    }\n\n    return result\n}\n","import axios from \"axios\"\n\nexport const searchAutocompleteAPI = {\n    getAutocomplete(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/search.json',\n            params: { q: `${city}` },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    },\n}\n\nexport const forecastWeatherApi = {\n    getForecastWeather(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n            params: { q: `${city}`, days: '3' },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    }\n}\nexport const realTimeWeatherApi = {\n    getRealTimeWeather(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/current.json',\n            params: { q: `${city}` },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    }\n}","import { forecastWeatherApi, searchAutocompleteAPI, realTimeWeatherApi } from \"../api/api\";\n\nconst SET_SEARCHING_VALUE = 'search_reducer/SET_SEARCHING_VALUE';\nconst SET_AUTOCOMPLETE_DATA = 'search_reducer/SET_AUTOCOMPLETE_DATA';\nconst SET_FORECAST_WEATHER_DATA = 'search_reducer/SET_FORECAST_WEATHER_DATA';\nconst SET_DATA_IS_FETCHING = 'search_reducer/SET_DATA_IS_FETCHING';\nconst SET_SEARCHING_IS_FETCHING = 'search_reducer/SET_SEARCHING_IS_FETCHING';\nconst SET_REALTIME_WEATHER = 'search_reducer/SET_REALTIME_WEATHER';\n\nlet initialState = {\n    forecastWeatherData: null,\n    autocompleteData: null,\n    realTimeWeatherData: null,\n    searchingValue: '',\n    dataIsFetching: false,\n    searchingIsFetching: false\n}\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_SEARCHING_VALUE:\n            return {\n                ...state, searchingValue: action.payload\n            }\n        case SET_AUTOCOMPLETE_DATA:\n            return {\n                ...state, autocompleteData: action.payload\n            }\n        case SET_FORECAST_WEATHER_DATA:\n            return {\n                ...state, forecastWeatherData: action.payload\n            }\n        case SET_DATA_IS_FETCHING:\n            return {\n                ...state, dataIsFetching: action.payload\n            }\n        case SET_SEARCHING_IS_FETCHING:\n            return {\n                ...state, searchingIsFetching: action.payload\n            }\n        case SET_REALTIME_WEATHER:\n            return {\n                ...state, realTimeWeatherData: action.payload\n            }\n        default: return state;\n    }\n};\n\nexport const setSearchingValue = (payload) => ({ type: SET_SEARCHING_VALUE, payload })\nexport const setAutocompleteData = (payload) => ({ type: SET_AUTOCOMPLETE_DATA, payload })\nexport const setForecastWeatherData = (payload) => ({ type: SET_FORECAST_WEATHER_DATA, payload })\nexport const setDataIsFetching = (payload) => ({ type: SET_DATA_IS_FETCHING, payload })\nexport const setSearchingIsFetching = (payload) => ({ type: SET_SEARCHING_IS_FETCHING, payload })\nexport const setRealTimeWeatherData = (payload) => ({ type: SET_REALTIME_WEATHER, payload })\n\n\nexport const getAutocompleteData = (city) => async (dispatch) => {\n    dispatch(setSearchingIsFetching(true))\n    let response = await searchAutocompleteAPI.getAutocomplete(city)\n    dispatch(setSearchingIsFetching(false))\n    dispatch(setAutocompleteData(response.data));\n}\n\nexport const getForecastWeatherData = (city) => async (dispatch) => {\n    dispatch(setDataIsFetching(true))\n    let response1 = await forecastWeatherApi.getForecastWeather(city)\n    dispatch(setDataIsFetching(false))\n    dispatch(setForecastWeatherData(response1.data));\n    dispatch(getRealTimeWeatherData(city))\n}\n\nexport const getRealTimeWeatherData = (city) => async (dispatch) => {\n    let response2 = await realTimeWeatherApi.getRealTimeWeather(city)\n    dispatch(setRealTimeWeatherData(response2.data));\n}\n\n\nexport default searchReducer;","import styles from './ForecastDay.module.css'\n\nexport const ForecastDay = ({ time, img, temperature }) => {\n    return (\n        <div className={styles.forecastDay}>\n            <div className={styles.time}>\n                {time}\n            </div>\n            <div className={styles.weatherImg}>\n                <img src={img} alt=\"\" />\n            </div>\n            <div className={styles.temperature}>\n                {temperature}\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getForecast4Hours } from '../../redux/currentWeather_selector';\nimport { getForecastWeatherData } from './../../redux/search_reducer';\nimport styles from './CurrentWeather.module.css';\nimport { ForecastDay } from './ForecastDay/ForecastDay';\n\nconst CurrentWeather = (props) => {\n    useEffect(() => {\n        props.getForecastWeatherData('London')\n    }, [])\n\n    // useEffect(() => {\n    //     console.log(props);\n    // }, [props.forecastWeatherData, props.forecast4Hours])\n\n    return (\n        <div className='wrapper'>\n            {props.forecastWeatherData\n                ? <div className={styles.currentWeather}>\n\n                    <div className={styles.nowWeather}>\n                        <div>\n                            <div className={styles.city}>{props.forecastWeatherData.location.name}</div>\n                            <div className={styles.time}>{props.forecastWeatherData.location.localtime}</div>\n                            <div className={styles.temperature}>{props.forecastWeatherData.current.temp_c}°C</div>\n                        </div>\n                    </div>\n                    <div className={styles.forecastDay}>\n                        {props.forecast4Hours.map(item =>\n                            <ForecastDay key={item.time.split(' ')[1]}\n                                time={item.time.split(' ')[1]}\n                                img={'https://' + item.condition.icon}\n                                temperature={item.temp_c + '°C'}\n                            />\n                        )}\n                    </div>\n\n                </div>\n                : <span>loading...</span>}\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        forecastWeatherData: state.searchData.forecastWeatherData,\n        forecast4Hours: getForecast4Hours(state),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getForecastWeatherData }),\n)(CurrentWeather)","import styles from './ForecastItem.module.css';\nexport const ForecastItem = (props) => {\n    return (\n        <div className={styles.forecastItem}>\n            <p>{props.date}</p>\n            <p>{props.daily_chance_of_rain}%</p>\n            <p>{props.avghumidity}%</p>\n            <p>{props.maxwind_kph}k/h</p>\n            <p>{props.avgtemp_c}°C</p>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { ForecastItem } from './ForecastItem/ForecastItem';\nimport styles from './ForecastWeather.module.css';\n\n\nconst ForecastWeather = (props) => {\n    // useEffect(() => {\n    //     console.log(props.forecastWeatherData);\n    // }, [props.forecastWeatherData])\n\n    return (\n        <div className={styles.forecastWeather}>\n            {props.forecastWeatherData\n                ?\n                props.forecastWeatherData.forecast.forecastday.map(item => {\n                    return <ForecastItem key={item.date}\n                        date={item.date}\n                        daily_chance_of_rain={item.day.daily_chance_of_rain}\n                        avghumidity={item.day.avghumidity}\n                        maxwind_kph={item.day.maxwind_kph}\n                        avgtemp_c={item.day.avgtemp_c}\n                    />\n                })\n                : <div>Loading...</div>\n            }\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        forecastWeatherData: state.searchData.forecastWeatherData,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {}),\n)(ForecastWeather)\n\n","export default __webpack_public_path__ + \"static/media/Logo.ebc92bde.svg\";","export default __webpack_public_path__ + \"static/media/Search_icon.9e6496c8.svg\";","import styles from './Search.module.css'\nimport search_icon from './../../../icons/Search_icon.svg'\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select'\n\nexport const Search = (props) => {\n    const [searchingValue, setSearchingValue] = useState(props.searchingValue)\n    const [options, setOptions] = useState([])\n    const [inputValue, setInputValue] = useState('')\n\n\n    useEffect(() => {\n        if (props.autocompleteData && props.autocompleteData.length > 0) {\n            const newOptions = props.autocompleteData.map(item => {\n                return { value: item.name, label: item.name }\n            })\n            setOptions(newOptions)\n        }\n    }, [props.autocompleteData])\n\n    const onChangeSearchingValue = (newValue) => {\n        setInputValue(newValue)\n        if (newValue.length > 1) {\n            setSearchingValue(newValue)\n            props.getAutocompleteData(newValue)\n        }\n    }\n    const searchOnClick = () => {\n        props.getForecastWeatherData(searchingValue)\n        setOptions([])\n    }\n\n    const onChange = (e) => {\n        setSearchingValue(e.value);\n        setOptions([])\n        props.getForecastWeatherData(e.value)\n    }\n\n    return (\n        <div className={styles.search}>\n            <Select className={styles.input}\n                onInputChange={onChangeSearchingValue}\n                onChange={onChange}\n                placeholder='Enter your city...'\n                options={options}\n                inputValue={inputValue}\n                blurInputOnSelect={true}\n            />\n            <button onClick={searchOnClick}>\n                <img src={search_icon} alt=\"\" />\n            </button>\n        </div>\n    )\n}\n","import styles from './TemperatureToggle.module.css'\n\nexport const TemperatureToggle = (props) => {\n    const toggleTemperature = (e) => {\n        props.setCfToggle(e.target.innerText);\n    }\n\n    return (\n        <div className={styles.toggle_block}>\n            <span onClick={toggleTemperature} className={props.cfToggle === '°C' ? styles.selected : ''}>°C</span>\n            <span>/</span>\n            <span onClick={toggleTemperature} className={props.cfToggle === '°F' ? styles.selected : ''}>°F</span>\n        </div>\n    )\n}\n","const SET_CF_TOGGLE = 'app/SET_CF_TOGGLE ';\n\nlet initialState = {\n    cfToggle: '°C'\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CF_TOGGLE:\n            return {\n                ...state, cfToggle: action.payload\n            }\n        default: return state;\n    }\n};\n\nexport const setCfToggle = (payload) => ({ type: SET_CF_TOGGLE, payload })\n\n// export const getAuth = () => async (dispatch) => {\n//     let data = await authAPI.authMe()\n//     if (data.resultCode === 0) {\n//         dispatch(setUserData(data));\n//     }\n// }\n\nexport default appReducer;","import React from 'react'\nimport styles from './Header.module.css'\nimport logo from './../../icons/Logo.svg'\nimport { Search } from './Search/Search'\nimport { TemperatureToggle } from './TemperatureToggle/TemperatureToggle'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { setCfToggle } from './../../redux/app_reducer'\nimport { getAutocompleteData, setSearchingValue, getForecastWeatherData } from './../../redux/search_reducer'\n\nconst Header = (props) => {\n    return (\n        <header >\n            <div className=\"wrapper\">\n                <div className={styles.header_block}>\n                    <div className={styles.logo}>\n                        <img src={logo} alt=\"\" />\n                        <span>WeatherApp</span>\n                    </div>\n                    <Search autocompleteData={props.autocompleteData}\n                        searchingValue={props.searchingValue}\n                        getAutocompleteData={props.getAutocompleteData}\n                        setSearchingValue={props.setSearchingValue}\n                        getForecastWeatherData={props.getForecastWeatherData}\n                    />\n                    <TemperatureToggle cfToggle={props.cfToggle} setCfToggle={props.setCfToggle} />\n                </div>\n            </div>\n        </header>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        cfToggle: state.app.cfToggle,\n        autocompleteData: state.searchData.autocompleteData,\n        searchingValue: state.searchData.searchingValue,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { setCfToggle, getAutocompleteData, setSearchingValue, getForecastWeatherData }),\n)(Header)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport styles from './NowInfo.module.css';\n\nconst NowInfo = (props) => {\n    // useEffect(() => {\n    //     console.log(props.realTimeWeatherData);\n    // }, [props.realTimeWeatherData])\n\n    return (\n        <div className={styles.nowInfo}>\n            <span>Now</span>\n            {props.realTimeWeatherData\n                ? <div className=\"wrapper\">\n                    <div className={styles.info}>\n                        <div>\n                            <p className={styles.title}>Chance of Rain</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.cloud}%</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Humidity</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.humidity}%</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Wind Speed</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.wind_kph} k/h</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Visibility</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.vis_km} km</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Pressure</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.pressure_mb} hPa</p>\n                        </div>\n                    </div>\n\n                </div>\n                : <div>Loading...</div>\n            }\n\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        realTimeWeatherData: state.searchData.realTimeWeatherData,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {}),\n)(NowInfo)\n","import './App.css';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastWeather from './components/ForecastWeather/ForecastWeather';\nimport Header from './components/Header/Header';\nimport NowInfo from './components/NowInfo/NowInfo';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"App wrapper\">\n        <CurrentWeather />\n        <NowInfo />\n        <ForecastWeather />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport appReducer from \"./app_reducer\";\nimport searchReducer from \"./search_reducer\";\n\nlet reducers = combineReducers({\n    searchData: searchReducer,\n    app: appReducer,\n});\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}