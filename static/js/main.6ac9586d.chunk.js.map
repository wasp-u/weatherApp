{"version":3,"sources":["components/CurrentWeather/CurrentWeather.module.css","components/CurrentWeather/ForecastDay/ForecastDay.module.css","components/Header/TemperatureToggle/TemperatureToggle.module.css","components/ForecastWeather/ForecastWeather.module.css","components/Header/Header.module.css","components/Header/Search/Search.module.css","components/ForecastWeather/ForecastItem/ForecastItem.module.css","components/NowInfo/NowInfo.module.css","redux/currentWeather_selector.js","api/api.js","redux/search_reducer.js","components/CurrentWeather/ForecastDay/ForecastDay.jsx","components/CurrentWeather/CurrentWeather.jsx","components/ForecastWeather/ForecastItem/ForecastItem.jsx","components/ForecastWeather/ForecastWeather.jsx","icons/Logo.svg","icons/Search_icon.svg","components/Header/Search/Search.jsx","components/Header/TemperatureToggle/TemperatureToggle.jsx","redux/app_reducer.js","components/Header/Header.jsx","components/NowInfo/NowInfo.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["module","exports","getForecast4Hours","state","result","searchData","forecastWeatherData","currentTime","location","localtime","split","forecast","forecastday","hour","filter","item","time","length","index","arr","searchAutocompleteAPI","city","options","method","url","params","q","headers","axios","request","forecastWeatherApi","days","realTimeWeatherApi","ipAPI","get","res","data","IPv4","SET_SEARCHING_VALUE","SET_AUTOCOMPLETE_DATA","SET_FORECAST_WEATHER_DATA","SET_DATA_IS_FETCHING","SET_SEARCHING_IS_FETCHING","SET_REALTIME_WEATHER","initialState","autocompleteData","realTimeWeatherData","searchingValue","dataIsFetching","searchingIsFetching","setDataIsFetching","payload","type","setSearchingIsFetching","getForecastWeatherData","dispatch","a","response1","getRealTimeWeatherData","response2","searchReducer","action","ForecastDay","img","temperature","className","styles","forecastDay","weatherImg","src","alt","compose","connect","forecast4Hours","cfToggle","app","props","currentWeather","nowWeather","name","current","temp_c","temp_f","map","condition","icon","ForecastItem","forecastItem","date","daily_chance_of_rain","avghumidity","maxwind_kph","avgtemp","forecastWeather","itemsLabels","day","avgtemp_c","avgtemp_f","Search","useState","setSearchingValue","setOptions","inputValue","setInputValue","startOptions","value","label","useEffect","then","newOptions","search","input","onInputChange","newValue","getAutocompleteData","onChange","e","placeholder","blurInputOnSelect","onClick","search_icon","TemperatureToggle","toggleTemperature","setCfToggle","target","innerText","toggle_block","selected","SET_CF_TOGGLE","appReducer","response","header_block","logo","nowInfo","info","title","cloud","humidity","wind_kph","vis_km","pressure_mb","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ac9586d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"currentWeather\":\"CurrentWeather_currentWeather__WsHjg\",\"city\":\"CurrentWeather_city__lwL6V\",\"time\":\"CurrentWeather_time__TxPCp\",\"temperature\":\"CurrentWeather_temperature__36nZ9\",\"forecastDay\":\"CurrentWeather_forecastDay__1aLx6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastDay\":\"ForecastDay_forecastDay__yJvom\",\"weatherImg\":\"ForecastDay_weatherImg__-pfdp\",\"time\":\"ForecastDay_time__1ln5O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggle_block\":\"TemperatureToggle_toggle_block__1FcGN\",\"selected\":\"TemperatureToggle_selected__Z2Awd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastWeather\":\"ForecastWeather_forecastWeather__nR6p2\",\"itemsLabels\":\"ForecastWeather_itemsLabels__kHzIc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_block\":\"Header_header_block__8_0n1\",\"logo\":\"Header_logo__3_SJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__3imIs\",\"input\":\"Search_input__lsW11\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastItem\":\"ForecastItem_forecastItem__3_eRb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nowInfo\":\"NowInfo_nowInfo__23spG\",\"info\":\"NowInfo_info__1iiKo\",\"value\":\"NowInfo_value__20Tpy\",\"title\":\"NowInfo_title__acqrv\"};","\nexport const getForecast4Hours = (state) => {\n    let result = []\n\n    if (state.searchData.forecastWeatherData) {\n        let currentTime = +state.searchData.forecastWeatherData.location.localtime.split(' ')[1].split(':')[0]\n        result = state.searchData.forecastWeatherData.forecast.forecastday[0].hour.filter(item => {\n            if (+item.time.split(' ')[1].split(':')[0] > currentTime && +item.time.split(' ')[1].split(':')[0] <= currentTime + 5) return true\n            else return false\n        })\n        if (result.length < 5) {\n            result = [...result, ...(state.searchData.forecastWeatherData.forecast.forecastday[1].hour.filter((item, index, arr) => {\n                return (index <= 4 - result.length) ? true : false\n            }))]\n        }\n    }\n\n    return result\n}\n","import axios from \"axios\"\n\nexport const searchAutocompleteAPI = {\n    getAutocomplete(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/search.json',\n            params: { q: `${city}` },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    },\n}\n\nexport const forecastWeatherApi = {\n    getForecastWeather(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/forecast.json',\n            params: { q: `${city}`, days: '3' },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    }\n}\nexport const realTimeWeatherApi = {\n    getRealTimeWeather(city) {\n        let options = {\n            method: 'GET',\n            url: 'https://weatherapi-com.p.rapidapi.com/current.json',\n            params: { q: `${city}` },\n            headers: {\n                'x-rapidapi-host': 'weatherapi-com.p.rapidapi.com',\n                'x-rapidapi-key': '3ae63edcebmsh6eaba50ddc23fd9p1b84f6jsn36ec219d4e09'\n            }\n        };\n        return axios.request(options)\n    }\n}\n\nexport const ipAPI = {\n    async getIP() {\n        const res = await axios.get('https://geolocation-db.com/json/')\n        return res.data.IPv4\n    }\n}","import { forecastWeatherApi, searchAutocompleteAPI, realTimeWeatherApi } from \"../api/api\";\n\nconst SET_SEARCHING_VALUE = 'search_reducer/SET_SEARCHING_VALUE';\nconst SET_AUTOCOMPLETE_DATA = 'search_reducer/SET_AUTOCOMPLETE_DATA';\nconst SET_FORECAST_WEATHER_DATA = 'search_reducer/SET_FORECAST_WEATHER_DATA';\nconst SET_DATA_IS_FETCHING = 'search_reducer/SET_DATA_IS_FETCHING';\nconst SET_SEARCHING_IS_FETCHING = 'search_reducer/SET_SEARCHING_IS_FETCHING';\nconst SET_REALTIME_WEATHER = 'search_reducer/SET_REALTIME_WEATHER';\n\nlet initialState = {\n    forecastWeatherData: null,\n    autocompleteData: null,\n    realTimeWeatherData: null,\n    searchingValue: '',\n    dataIsFetching: false,\n    searchingIsFetching: false\n}\n\nconst searchReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_SEARCHING_VALUE:\n            return {\n                ...state, searchingValue: action.payload\n            }\n        case SET_AUTOCOMPLETE_DATA:\n            return {\n                ...state, autocompleteData: action.payload\n            }\n        case SET_FORECAST_WEATHER_DATA:\n            return {\n                ...state, forecastWeatherData: action.payload\n            }\n        case SET_DATA_IS_FETCHING:\n            return {\n                ...state, dataIsFetching: action.payload\n            }\n        case SET_SEARCHING_IS_FETCHING:\n            return {\n                ...state, searchingIsFetching: action.payload\n            }\n        case SET_REALTIME_WEATHER:\n            return {\n                ...state, realTimeWeatherData: action.payload\n            }\n        default: return state;\n    }\n};\n\nexport const setSearchingValue = (payload) => ({ type: SET_SEARCHING_VALUE, payload })\nexport const setAutocompleteData = (payload) => ({ type: SET_AUTOCOMPLETE_DATA, payload })\nexport const setForecastWeatherData = (payload) => ({ type: SET_FORECAST_WEATHER_DATA, payload })\nexport const setDataIsFetching = (payload) => ({ type: SET_DATA_IS_FETCHING, payload })\nexport const setSearchingIsFetching = (payload) => ({ type: SET_SEARCHING_IS_FETCHING, payload })\nexport const setRealTimeWeatherData = (payload) => ({ type: SET_REALTIME_WEATHER, payload })\n\n\nexport const getAutocompleteData = (city) => async (dispatch) => {\n    dispatch(setSearchingIsFetching(true))\n    let response = await searchAutocompleteAPI.getAutocomplete(city)\n    dispatch(setSearchingIsFetching(false))\n    dispatch(setAutocompleteData(response.data));\n}\n\nexport const getForecastWeatherData = (city) => async (dispatch) => {\n    dispatch(setDataIsFetching(true))\n    let response1 = await forecastWeatherApi.getForecastWeather(city)\n    dispatch(setDataIsFetching(false))\n    dispatch(setForecastWeatherData(response1.data));\n    dispatch(getRealTimeWeatherData(city))\n}\n\nexport const getRealTimeWeatherData = (city) => async (dispatch) => {\n    let response2 = await realTimeWeatherApi.getRealTimeWeather(city)\n    dispatch(setRealTimeWeatherData(response2.data));\n}\n\n\nexport default searchReducer;","import styles from './ForecastDay.module.css'\n\nexport const ForecastDay = ({ time, img, temperature }) => {\n    return (\n        <div className={styles.forecastDay}>\n            <div className={styles.time}>\n                {time}\n            </div>\n            <div className={styles.weatherImg}>\n                <img src={img} alt=\"\" />\n            </div>\n            <div className={styles.temperature}>\n                {temperature}\n            </div>\n        </div>\n    )\n}\n","import { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { getForecast4Hours } from '../../redux/currentWeather_selector';\nimport { getForecastWeatherData } from './../../redux/search_reducer';\nimport styles from './CurrentWeather.module.css';\nimport { ForecastDay } from './ForecastDay/ForecastDay';\n\nconst CurrentWeather = (props) => {\n    return (\n        <div className='wrapper'>\n            {props.forecastWeatherData\n                ? <div className={styles.currentWeather}>\n\n                    <div className={styles.nowWeather}>\n                        <div>\n                            <div className={styles.city}>{props.forecastWeatherData.location.name}</div>\n                            <div className={styles.time}>{props.forecastWeatherData.location.localtime}</div>\n                            <div className={styles.temperature}>{props.cfToggle === '°C'\n                                ? `${props.forecastWeatherData.current.temp_c}°C`\n                                : `${props.forecastWeatherData.current.temp_f}°F`\n                            }</div>\n                        </div>\n                    </div>\n                    <div className={styles.forecastDay}>\n                        {props.forecast4Hours.map(item =>\n                            <ForecastDay key={item.time.split(' ')[1]}\n                                time={item.time.split(' ')[1]}\n                                img={'https://' + item.condition.icon}\n                                temperature={props.cfToggle === '°C'\n                                    ? item.temp_c + '°C'\n                                    : item.temp_f + '°F'\n                                }\n                            />\n                        )}\n                    </div>\n\n                </div>\n                : <span>loading...</span>}\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        forecastWeatherData: state.searchData.forecastWeatherData,\n        forecast4Hours: getForecast4Hours(state),\n        cfToggle: state.app.cfToggle,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { getForecastWeatherData }),\n)(CurrentWeather)","import styles from './ForecastItem.module.css';\nexport const ForecastItem = (props) => {\n    return (\n        <div className={styles.forecastItem}>\n            <p>{props.date}</p>\n            <p>{props.daily_chance_of_rain}%</p>\n            <p>{props.avghumidity}%</p>\n            <p>{props.maxwind_kph} Km/h</p>\n            <p>{props.avgtemp}</p>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { ForecastItem } from './ForecastItem/ForecastItem';\nimport styles from './ForecastWeather.module.css';\n\n\nconst ForecastWeather = (props) => {\n    // useEffect(() => {\n    //     console.log(props.forecastWeatherData);\n    // }, [props.forecastWeatherData])\n\n    return (\n        <div className={styles.forecastWeather}>\n            <div className={styles.itemsLabels}>\n                <p>DAY</p>\n                <p>CHANCE OF RAIN</p>\n                <p>HUMIDITY</p>\n                <p>WIND</p>\n                <p>TEMPERATURE</p>\n            </div>\n            {props.forecastWeatherData\n                ?\n                props.forecastWeatherData.forecast.forecastday.map(item => {\n                    return <ForecastItem key={item.date}\n                        date={item.date}\n                        daily_chance_of_rain={item.day.daily_chance_of_rain}\n                        avghumidity={item.day.avghumidity}\n                        maxwind_kph={item.day.maxwind_kph}\n                        avgtemp={props.cfToggle === '°C'\n                            ? `${item.day.avgtemp_c}°C`\n                            : `${item.day.avgtemp_f}°F`\n                        }\n                    />\n                })\n                : <div>Loading...</div>\n            }\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        forecastWeatherData: state.searchData.forecastWeatherData,\n        cfToggle: state.app.cfToggle,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {}),\n)(ForecastWeather)\n\n","export default __webpack_public_path__ + \"static/media/Logo.ebc92bde.svg\";","export default __webpack_public_path__ + \"static/media/Search_icon.9e6496c8.svg\";","import styles from './Search.module.css'\nimport search_icon from './../../../icons/Search_icon.svg'\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select'\nimport { ipAPI } from '../../../api/api';\n\nexport const Search = (props) => {\n    const [searchingValue, setSearchingValue] = useState(props.searchingValue)\n    const [options, setOptions] = useState([])\n    const [inputValue, setInputValue] = useState('')\n\n    const startOptions = ['Kiev', 'Moscow', 'Konotop', 'London', 'Paris', 'Berlin'].map(item => {\n        return { value: item, label: item }\n    })\n\n    useEffect(() => {\n        ipAPI.getIP().then(res => {\n            props.getForecastWeatherData(res)\n        });\n        setOptions(startOptions)\n    }, [])\n\n    useEffect(() => {\n        if (props.autocompleteData && props.autocompleteData.length > 0) {\n            const newOptions = props.autocompleteData.map(item => {\n                return { value: item.name, label: item.name }\n            })\n            setOptions(newOptions)\n        }\n    }, [props.autocompleteData])\n\n    const onChangeSearchingValue = (newValue) => {\n        setInputValue(newValue)\n        if (newValue.length > 1) {\n            setSearchingValue(newValue)\n            props.getAutocompleteData(newValue)\n        }\n    }\n    const searchOnClick = () => {\n        props.getForecastWeatherData(searchingValue)\n        setOptions(startOptions)\n        setInputValue(searchingValue)\n    }\n\n    const onChange = (e) => {\n        setSearchingValue(e.value);\n        setOptions(startOptions)\n        setInputValue(searchingValue)\n        props.getForecastWeatherData(e.value)\n    }\n\n    return (\n        <div className={styles.search}>\n            <Select className={styles.input}\n                onInputChange={onChangeSearchingValue}\n                onChange={onChange}\n                placeholder='Enter your city...'\n                options={options}\n                inputValue={inputValue}\n                blurInputOnSelect={true}\n            />\n            <button onClick={searchOnClick}>\n                <img src={search_icon} alt=\"\" />\n            </button>\n        </div>\n    )\n}\n","import styles from './TemperatureToggle.module.css'\n\nexport const TemperatureToggle = (props) => {\n    const toggleTemperature = (e) => {\n        props.setCfToggle(e.target.innerText);\n    }\n\n    return (\n        <div className={styles.toggle_block}>\n            <span onClick={toggleTemperature} className={props.cfToggle === '°C' ? styles.selected : ''}>°C</span>\n            <span>/</span>\n            <span onClick={toggleTemperature} className={props.cfToggle === '°F' ? styles.selected : ''}>°F</span>\n        </div>\n    )\n}\n","const SET_CF_TOGGLE = 'app/SET_CF_TOGGLE ';\n\nlet initialState = {\n    cfToggle: '°C'\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_CF_TOGGLE:\n            return {\n                ...state, cfToggle: action.payload\n            }\n        default: return state;\n    }\n};\n\nexport const setCfToggle = (payload) => ({ type: SET_CF_TOGGLE, payload })\n\nexport default appReducer;","import React from 'react'\nimport styles from './Header.module.css'\nimport logo from './../../icons/Logo.svg'\nimport { Search } from './Search/Search'\nimport { TemperatureToggle } from './TemperatureToggle/TemperatureToggle'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { setCfToggle } from './../../redux/app_reducer'\nimport { getAutocompleteData, setSearchingValue, getForecastWeatherData } from './../../redux/search_reducer'\n\nconst Header = (props) => {\n    return (\n        <header >\n            <div className=\"wrapper\">\n                <div className={styles.header_block}>\n                    <div className={styles.logo}>\n                        <img src={logo} alt=\"\" />\n                        <span>WeatherApp</span>\n                    </div>\n                    <Search autocompleteData={props.autocompleteData}\n                        searchingValue={props.searchingValue}\n                        getAutocompleteData={props.getAutocompleteData}\n                        setSearchingValue={props.setSearchingValue}\n                        getForecastWeatherData={props.getForecastWeatherData}\n                    />\n                    <TemperatureToggle cfToggle={props.cfToggle} setCfToggle={props.setCfToggle} />\n                </div>\n            </div>\n        </header>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        cfToggle: state.app.cfToggle,\n        autocompleteData: state.searchData.autocompleteData,\n        searchingValue: state.searchData.searchingValue,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, { setCfToggle, getAutocompleteData, setSearchingValue, getForecastWeatherData }),\n)(Header)","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport styles from './NowInfo.module.css';\n\nconst NowInfo = (props) => {\n    // useEffect(() => {\n    //     console.log(props.realTimeWeatherData);\n    // }, [props.realTimeWeatherData])\n\n    return (\n        <div className={styles.nowInfo}>\n            <span>Now</span>\n            {props.realTimeWeatherData\n                ? <div className=\"wrapper\">\n                    <div className={styles.info}>\n                        <div>\n                            <p className={styles.title}>Chance of Rain</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.cloud}%</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Humidity</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.humidity}%</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Wind Speed</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.wind_kph} Km/h</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Visibility</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.vis_km} Km</p>\n                        </div>\n                        <div>\n                            <p className={styles.title}>Pressure</p>\n                            <p className={styles.value}>{props.realTimeWeatherData.current.pressure_mb} hPa</p>\n                        </div>\n                    </div>\n\n                </div>\n                : <div>Loading...</div>\n            }\n\n        </div>\n    )\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        realTimeWeatherData: state.searchData.realTimeWeatherData,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {}),\n)(NowInfo)\n","import './App.css';\nimport CurrentWeather from './components/CurrentWeather/CurrentWeather';\nimport ForecastWeather from './components/ForecastWeather/ForecastWeather';\nimport Header from './components/Header/Header';\nimport NowInfo from './components/NowInfo/NowInfo';\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <div className=\"App wrapper\">\n        <CurrentWeather />\n        <NowInfo />\n        <ForecastWeather />\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport appReducer from \"./app_reducer\";\nimport searchReducer from \"./search_reducer\";\n\nlet reducers = combineReducers({\n    searchData: searchReducer,\n    app: appReducer,\n});\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}